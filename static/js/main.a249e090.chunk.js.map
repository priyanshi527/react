{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","console","log","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4YAaQA,EADcC,IAASC,cAVR,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGIC,YACfC,EAAOX,IAASW,OAChBC,EAAS,IAAIZ,IAASW,KAAKE,mBAElBd,I,QC2BFe,MAvCf,YAA8C,IAAD,EAAvBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAAa,EACjBC,mBAAS,IADQ,mBAClCC,EADkC,KAC5BC,EAD4B,OAEXF,mBAAS,IAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,KAuBzC,OApBAC,qBAAU,WACHR,GACChB,EAAGyB,WAAW,SAASC,IAAIV,GAAIS,WAAW,YAAYE,QAAQ,YAAY,QAC1EC,YAAW,SAACC,GAAD,OACPN,EAAYM,EAASC,KAAKC,KAAI,SAACL,GAAD,OAAQA,EAAIM,gBAGpD,CAAChB,IACHQ,qBAAU,WACNH,EAAQY,KAAKC,MAAsB,IAAhBD,KAAKE,aACzB,IAUKjB,EAWJ,qBAAKkB,QApBS,WACd,IAAMC,EAAWC,OAAO,kCACpBD,GAEArC,EAAGyB,WAAW,SAASc,IAAI,CACvBtB,KAAMoB,KAeYG,UAAU,cAApC,SACI,gDAXJ,cAAC,IAAD,CAAMC,GAAE,iBAAYzB,GAApB,SACA,sBAAKwB,UAAU,cAAf,UACI,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CvB,EAA5C,UACX,sBAAKoB,UAAU,kBAAf,UACI,6BAAKvB,IACL,sCAAIK,EAAS,UAAb,aAAI,EAAasB,mBCjCpBC,G,MAAeC,2BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,cAACL,EAAaM,SAAd,CAAuBC,MAAQC,qBAAYL,EAAQC,GAAnD,SACKC,KAIII,EAAgB,kBAAMC,qBAAWV,IC2C/BW,MA1Cf,WAAoB,IAAD,EACWrC,mBAAS,IADpB,mBACRsC,EADQ,KACDC,EADC,OAEYJ,IAFZ,mBAEPK,EAFO,KAEPA,KAcR,OAhBe,KAGfnC,qBAAU,WAEN,IAAMoC,EAAa5D,EAAGyB,WAAW,SAASG,YAAW,SAACC,GAAD,OACjD6B,EAAS7B,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CAC7BV,GAAIU,EAAIV,GACRgB,KAAMN,EAAIM,eAItB,OAAO,WACH4B,OAEN,IAEE,sBAAKpB,UAAU,UAAf,UACA,sBAAKA,UAAU,kBAAf,UACA,cAACE,EAAA,EAAD,CAAQC,IAAG,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAME,WACnB,sBAAKrB,UAAU,uBAAf,UACA,eAACsB,EAAA,EAAD,gBAAc,cAAC,IAAD,IAAd,OACA,eAACA,EAAA,EAAD,gBAAc,cAAC,IAAD,IAAd,OACA,eAACA,EAAA,EAAD,gBAAc,cAAC,IAAD,IAAd,aAGA,qBAAKtB,UAAU,iBAAf,SACA,sBAAKA,UAAU,0BAAf,UACA,cAACuB,EAAA,EAAD,IACC,uBAAOC,YAAY,2BAA2BC,KAAK,cAGpD,sBAAKzB,UAAU,gBAAf,UACA,cAAC,EAAD,CAAatB,YAAU,IACtBuC,EAAM1B,KAAI,SAAAmC,GAAI,OACX,cAAC,EAAD,CAA2BlD,GAAIkD,EAAKlD,GAAIC,KAAMiD,EAAKlC,KAAKf,MAAtCiD,EAAKlD,c,iECkCpBmD,MArEf,WAAiB,IAAD,MACYhD,mBAAS,IADrB,mBACLC,EADK,KACCC,EADD,OAEcF,mBAAS,IAFvB,mBAELiD,EAFK,KAEEC,EAFF,KAGJC,EAAUC,cAAVD,OAHI,EAIoBnD,mBAAS,IAJ7B,mBAILkB,EAJK,KAIKmC,EAJL,OAKkBrD,mBAAS,IAL3B,mBAKLG,EALK,KAKIC,EALJ,OAMa+B,IANb,mBAMJK,EANI,KAMJA,KAwBR,OA9BY,KAOZnC,qBAAW,WACH8C,IACAtE,EAAGyB,WAAW,SAASC,IAAI4C,GAAQ1C,YAAW,SAAAC,GAAQ,OAClD2C,EAAY3C,EAASG,OAAOf,SAEhCjB,EAAGyB,WAAW,SAASC,IAAI4C,GAAQ7C,WAAW,YAAYE,QAAQ,YAAY,OAAOC,YAAW,SAACC,GAAD,OACxFN,EAAYM,EAASC,KAAKC,KAAI,SAAAL,GAAG,OAAIA,EAAIM,iBAGvD,CAACsC,IACH9C,qBAAU,WACNH,EAAQY,KAAKC,MAAsB,IAAhBD,KAAKE,aACzB,CAACmC,IAYA,sBAAK9B,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACA,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CvB,EAA5C,UACX,sBAAKoB,UAAU,iBAAf,UACI,6BAAKH,IACL,0CAAa,IAAb,IAAmB,IAAIoC,KAAJ,UAASnD,EAASA,EAASoD,OAAO,UAAlC,iBAAS,EAA6BC,iBAAtC,aAAS,EAAwCC,UAAUC,oBAElF,sBAAKrC,UAAU,mBAAf,UACI,cAACsB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,MAEJ,cAACD,EAAA,EAAD,UACI,cAACgB,EAAA,EAAD,MAEJ,cAAChB,EAAA,EAAD,UACI,cAAC,IAAD,YAIR,qBAAKtB,UAAU,WAAf,SACClB,EAASS,KAAI,SAACa,GAAD,aACV,oBAAGJ,UAAS,sBAAiBI,EAAQ3B,OAAS0C,EAAKoB,aAAe,gBAAlE,UACA,sBAAMvC,UAAU,WAAhB,SAA4BI,EAAQ3B,OAAa2B,EAAQA,QACzD,sBAAMJ,UAAU,gBAAhB,SAAiC,IAAIiC,KAAJ,UAAS7B,EAAQ+B,iBAAjB,aAAS,EAAmBC,UAAUC,wBAI3E,sBAAKrC,UAAU,aAAf,UACA,cAAC,IAAD,IACA,iCACI,uBAAOY,MAAOgB,EAAOY,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAO9B,QAAQY,YAAY,iBAAiBC,KAAK,SAClG,wBAAQ7B,QA1CD,SAAC6C,GACjBA,EAAEE,iBAEFnF,EAAGyB,WAAW,SAASC,IAAI4C,GAAQ7C,WAAW,YAAYc,IAAI,CAC1DK,QAASwB,EACTnD,KAAM0C,EAAKoB,YACXJ,UAAW1E,IAASU,UAAUyE,WAAWC,oBAE7ChB,EAAS,KAkC8BJ,KAAK,SAAnC,+BAEJ,cAAC,IAAD,W,iCCtECqB,EACA,WAgBEtC,EAbC,SAACuC,EAAOC,GAEpB,OADAC,QAAQC,IAAIF,GACJA,EAAOvB,MACX,KAAKqB,EACD,OAAO,2BACAC,GADP,IAEI5B,KAAM6B,EAAO7B,OAErB,QACI,OAAO4B,ICYJI,MAvBf,WAAkB,IAAD,EACUrC,IADV,yCACFsC,EADE,KAUb,OACI,qBAAKpD,UAAU,QAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKG,IAAI,mEAAmEkD,IAAI,KAChF,qBAAKrD,UAAU,cAAf,SACI,uDAEJ,cAACsD,EAAA,EAAD,CAAQ1D,QAfL,WACXxB,EAAKmF,gBAAgBlF,GAAUmF,MAAK,SAACC,GACjCL,EAAS,CACL3B,KAAMqB,EACN3B,KAAMsC,EAAOtC,UAElBuC,OAAM,SAACC,GAAD,OAAUC,MAAMD,EAAMvD,aASvB,uCCWDyD,MA3Bf,WAAgB,IAAD,EACe/C,IADf,mBACLK,EADK,KACLA,KACR,OAFa,KAIX,aADA,CACA,qBACA,qBAAKnB,UAAU,MAAf,SACEmB,EAGF,qBAAKnB,UAAU,WAAf,SACA,eAAC,IAAD,WACA,cAAC,EAAD,IACC,eAAC,IAAD,WACA,cAAC,IAAD,CAAO8D,KAAK,iBAAZ,SACC,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAVA,cAAC,EAAD,SCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,CAAehE,aJVU,CACvBU,KAAK,MISmCX,QAASA,EAAnD,SACE,cAAC,EAAD,QAGFkE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a249e090.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDd2_R5UWyIp0rzyC2R-6qg1G_ilKH-ems\",\r\n    authDomain: \"whatsappclone-2351a.firebaseapp.com\",\r\n    databaseURL: \"https://whatsappclone-2351a.firebaseio.com\",\r\n    projectId: \"whatsappclone-2351a\",\r\n    storageBucket: \"whatsappclone-2351a.appspot.com\",\r\n    messagingSenderId: \"1055630799424\",\r\n    appId: \"1:1055630799424:web:c6a4e3ea9d1af12462e5a5\",\r\n    measurementId: \"G-W8WJX3G9BW\"\r\n  };\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db=firebaseApp.firestore(); \r\n  const auth = firebase.auth();\r\n  const provider=new firebase.auth.GoogleAuthProvider();\r\n  export {auth, provider};\r\n  export default db;\r\n\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Avatar } from\"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from './firebase';\r\nimport {Link} from \"react-router-dom\";\r\nfunction SidebarChat({id, name, addNewChat}) {\r\n    const [seed, setSeed] = useState('');\r\n    const [messages,setMessages] =useState('');\r\n    useEffect(()=> {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').\r\n            onSnapshot((snapshot) => (\r\n                setMessages(snapshot.docs.map((doc)=> doc.data()))\r\n            ));\r\n        }\r\n    },[id]);\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000 ));\r\n    }, []);\r\n    const createchat =() => {\r\n        const roomName = prompt(\"Please enter name for the chat\");\r\n        if (roomName) {\r\n            //do some stuff in database here\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            })\r\n        }\r\n    };\r\n    return !addNewChat? (\r\n        <Link to={`/rooms/${id}`}>\r\n        <div className='sidebarChat'>\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className=\"sidebarChatInfo\">\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createchat} className=\"sidebarChat\">\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default SidebarChat;\r\n","import React, {createContext ,useContext ,useReducer } from \"react\";\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value ={useReducer (reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect,useState } from 'react'\r\nimport {Avatar , IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport {SearchOutlined} from \"@material-ui/icons\";\r\nimport SidebarChat from './SidebarChat';\r\nimport \"./Sidebar.css\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nfunction Sidebar() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n    useEffect(() => {\r\n        //we use unsubscribe to detach the user after it is used  \r\n        const unsubscribe= db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n            setRooms(snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n        return () =>{\r\n            unsubscribe();\r\n        }\r\n    },[]);\r\n    return (\r\n        <div className=\"sidebar\">\r\n        <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL} />\r\n        <div className=\"sidebar__headerRight\">\r\n        <IconButton>  <DonutLargeIcon /> </IconButton>\r\n        <IconButton>  <ChatIcon /> </IconButton> \r\n        <IconButton>  <MoreVertIcon /> </IconButton>   \r\n        </div> \r\n        </div>\r\n        <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchContainer\">\r\n        <SearchOutlined />\r\n         <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n        </div>\r\n        </div>\r\n        <div className=\"sidebar_chats\">\r\n        <SidebarChat addNewChat/> \r\n        {rooms.map(room => (\r\n            <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n        </div>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React ,{ useState, useEffect } from 'react'\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, SearchOutlined, MoreVert} from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router\";\r\nimport \"./Chat.css\";\r\nimport db from './firebase';\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from './StateProvider';\r\nfunction Chat() {\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const { roomId }= useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages,setMessages] =useState([]);\r\n    const [{user},dispacth]= useStateValue();\r\n    useEffect( () => {\r\n        if (roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => \r\n                setRoomName(snapshot.data().name)\r\n            );\r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy('timestamp','asc').onSnapshot((snapshot) => (\r\n                    setMessages(snapshot.docs.map(doc => doc.data()))\r\n                ));\r\n        }\r\n    },[roomId]);\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000 ));\r\n    }, [roomId]);\r\n    const sendMessage =(e) => {\r\n       e.preventDefault();\r\n       //console.log(input);\r\n       db.collection('rooms').doc(roomId).collection('messages').add({\r\n           message: input,\r\n           name: user.displayName,\r\n           timestamp: firebase.firestore.FieldValue.serverTimestamp(), \r\n       });\r\n       setInput(\"\");\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chatheader\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className=\"chatheaderinfo\">\r\n                <h3>{roomName}</h3>\r\n                <p>Last seen{' '} {new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()}</p>\r\n            </div>\r\n            <div className=\"classheaderRight\">\r\n                <IconButton>\r\n                    <SearchOutlined />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <AttachFile />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <MoreVert/>\r\n                </IconButton>\r\n            </div>\r\n            </div>\r\n            <div className=\"chatbody\">\r\n            {messages.map((message)=>\r\n                <p className={`chatmessage ${message.name === user.displayName && \"chatreceiver\"}`}>\r\n                <span className=\"chatname\">{message.name}</span>{message.message}\r\n                <span className=\"chattimestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n               </p>\r\n            )}\r\n            </div>\r\n            <div className=\"chatfooter\">\r\n            <InsertEmoticonIcon />\r\n            <form>\r\n                <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\r\n                <button onClick={sendMessage} type=\"submit\">Send a Message</button>\r\n            </form>\r\n            <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;\r\n","export const initialState ={\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER:\"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;    \r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react'\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then((result)=>{\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        }).catch((error) =>alert(error.message));\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n                <Button onClick= {signIn}>Sign in with Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat.js';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport React,{ useState } from 'react';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider.js';\nfunction App() {\n  const [{user} , dispatch] = useStateValue();\n  return (\n    // BEM naming convection\n    <>\n    <div className=\"app\">\n    {!user ? (\n      <Login/>\n    ) : (\n    <div className=\"app_body\">\n    <Router>\n    <Sidebar />\n     <Switch>\n     <Route path=\"/rooms/:roomId\">\n      <Chat/>\n    </Route>\n    <Route path=\"/\">\n      <Chat/>\n    </Route>\n    </Switch>\n    </Router>\n    </div>)}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState={initialState}reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}